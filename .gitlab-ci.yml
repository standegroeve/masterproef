variables:
  INSTANCE: 'Writerside/kd'
  ARTIFACT: 'webHelpKD2-all.zip'
  DOCKER_VERSION: '243.21565'
  ALGOLIA_ARTIFACT: 'algolia-indexes-KD.zip'
  ALGOLIA_APP_NAME: '23BLLNEZ2S'
  ALGOLIA_INDEX_NAME: 'prod_KVASIR-NEXT'
  CONFIG_JSON_PRODUCT: 'kd'
  CONFIG_JSON_VERSION: 'main'
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  QUARKUS_JIB_BASE_JVM_IMAGE: "gitlab.stud.atlantis.ugent.be:5050/utils/docker/eclipse-temurin:21"
  QUARKUS_CONTAINER_IMAGE_PUSH: "false"
  QUARKUS_CONTAINER_IMAGE_REGISTRY: $CI_REGISTRY
  QUARKUS_CONTAINER_IMAGE_GROUP: $CI_PROJECT_PATH
  QUARKUS_CONTAINER_IMAGE_USERNAME: $CI_REGISTRY_USER
  QUARKUS_CONTAINER_IMAGE_PASSWORD: $CI_REGISTRY_PASSWORD

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        QUARKUS_CONTAINER_IMAGE_TAG: "$CI_COMMIT_TAG"
        QUARKUS_CONTAINER_IMAGE_ADDITIONAL_TAGS: "latest"
        QUARKUS_CONTAINER_IMAGE_PUSH: "true"
    #    Ignore Draft MRs
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TITLE =~ /^(\[Draft\]|\(Draft\)|Draft:)/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables: &commitBranchVersions
        QUARKUS_CONTAINER_IMAGE_TAG: "$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
        QUARKUS_CONTAINER_IMAGE_ADDITIONAL_TAGS: "$CI_COMMIT_REF_SLUG"
        QUARKUS_CONTAINER_IMAGE_PUSH: "true"
    #   Don't trigger branch pipeline when there is an open MR
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
      variables: *commitBranchVersions


.mavenChanges: &mavenChanges
  - "**/src/**/*"
  - "**/pom.xml"

stages:
  - build
  - test
  - deploy
  - search

build:maven:
  stage: build
  image: eclipse-temurin:21
  tags: [ "cache", "docker" ]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .m2/repository/
    policy: pull-push
  services:
    - name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind"
      alias: docker
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
    - changes: *mavenChanges
      variables:
        SKIP_TESTS: "-DskipTests"
  script:
    - ./mvnw $MAVEN_CLI_OPTS $SKIP_TESTS package -Dquarkus.container-image.push=$QUARKUS_CONTAINER_IMAGE_PUSH
  interruptible: true
  after_script:
    - awk -F,
      '{ instructions += $4 + $5; covered += $5 } END
      { print covered, "/", instructions, "instructions covered";
      print 100*covered/instructions, "% covered (line coverage)" }'
      target/coverage/jacoco.csv
  coverage: '/(\d+\.\d+) % covered/'
  artifacts:
    paths:
      - services/monolith/target/openapi
    reports:
      coverage_report:
        coverage_format: jacoco
        path: target/coverage/jacoco.xml
      junit: "**/TEST-*.xml"
    when: always

#deploy-cnl:
#  rules:
#    - if: '$CI_COMMIT_TAG'
#    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
#    - changes: *mavenChanges
#  cache: []
#  stage: deploy
#  image: dtzar/helm-kubectl:3.15.4
#  before_script:
#    - kubectl config view
#  script:
#    - kubectl config use-context ibcndevs/clusters:kvasir-cnl

build:writerside:
  needs: [build:maven]
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
  image: registry.jetbrains.team/p/writerside/builder/writerside-builder:$DOCKER_VERSION
  script:
    - set -e
    - export DISPLAY=:99
    - Xvfb :99 &
    - /opt/builder/bin/idea.sh helpbuilderinspect -source-dir . -product $INSTANCE --runner gitlab -output-dir public/ || true
    - echo "Testing existence of $ARTIFACT..."
    - test -e public/$ARTIFACT
  artifacts:
    paths:
      - public/$ARTIFACT
      - public/report.json
      - public/$ALGOLIA_ARTIFACT
    expire_in: 1 week
  interruptible: true

test:writerside:
  needs: [build:writerside]
  stage: test
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
  image: openjdk:18-jdk-alpine
  before_script:
    - apk add curl
  script:
    - cd public
    - curl -o wrs-checker.jar -L https://packages.jetbrains.team/maven/p/writerside/maven/com/jetbrains/writerside/writerside-ci-checker/1.0/writerside-ci-checker-1.0.jar
    - java -jar wrs-checker.jar report.json $INSTANCE

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
  needs: [build:writerside, test:writerside]
  image: ubuntu:latest
  before_script:
    - apt-get update -y && apt-get install unzip -y
  script:
    - cd public
    - unzip -O UTF-8 $ARTIFACT
    - ls -l
  artifacts:
    paths:
      - public
    expire_in: 1 week
  interruptible: false

search:
  stage: search
  rules:
    # Never run when the ALGOLIA_KEY is not set
    - when: never
      if: '$ALGOLIA_KEY == null'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
  needs: [build:writerside, test:writerside, pages]
  image: registry.jetbrains.team/p/writerside/builder/algolia-publisher:2.0.32-3
  script:
    - unzip -O UTF-8 public/$ALGOLIA_ARTIFACT -d algolia-indexes
    - env "algolia-key=$ALGOLIA_KEY" java -jar /opt/builder/help-publication-agent.jar update-index --application-name "$ALGOLIA_APP_NAME" --index-name "$ALGOLIA_INDEX_NAME" --product "$CONFIG_JSON_PRODUCT" --version "$CONFIG_JSON_VERSION" --index-directory algolia-indexes/ 2>&1 | tee algolia-update-index-log.txt
  artifacts:
    paths:
      - algolia-update-index-log.txt
    expire_in: 1 week
  interruptible: false

smoke_test:compose:
  tags: [ "docker" ]
  image: docker
  stage: test
  needs: [build:maven]
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH==$CI_DEFAULT_BRANCH'
  services:
    - name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind"
      alias: docker
  before_script:
    - apk add --no-cache bash jq curl
    - timeout=30
    - start_time=$(date +%s)
    - |
      while ! docker info >/dev/null 2>&1; do
        if [ $(( $(date +%s) - start_time )) -ge $timeout ]; then
          echo "Timeout waiting for Docker daemon to be ready." >&2
          exit 1
        fi
        sleep 1
      done
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - cd .deployment/docker-compose
    - sed -i "s%kvasir/kvasir-server/monolith:.*%$QUARKUS_CONTAINER_IMAGE_GROUP/monolith:$QUARKUS_CONTAINER_IMAGE_TAG%g" docker-compose.yml
    - docker compose up -d --wait --quiet-pull --no-color
    - docker ps -a
    - tests/compose-smoke-test.sh
  after_script:
    - cd .deployment/docker-compose
    - docker compose logs --no-color > compose-logs.txt
    - docker compose down
  artifacts:
    paths:
      - .deployment/docker-compose/compose-logs.txt
      - .deployment/docker-compose/docker-compose.yml
    expire_in: 1 week
    when: on_failure